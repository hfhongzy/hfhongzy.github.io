{"posts":[{"title":"Sample Paper","text":"Artificial Intelligence (H), Bo Yuan Sample Paper True or False. On a graph where each edge is at least $\\epsilon$: (1) Greedy Search is optimal. (2) BFS is optimal. (3) UCS is optimal. If we use A* with the heuristic $h_2(n)$, where $h_2(n) = 2\\cdot h(n)$ and $h(n)$ is admissible: (4) This A* is optimal. (5) Answer(A*) $\\le 2 \\times$ optimal answer. Alpha-Beta Pruning. You are given a tree. (1) Mark the pruned branches. (2) The decision of the root. (3) The alpha and beta values of the root. Constraints Satisfaction Problem (CSP). You are given a map like that in lecture slides. (1) Cross out some values by Forward Checking. (2) Cross out some values by AC-3 (arc-consistency). (3) Which variables can be chosen, using MRV (Minimize Remaining Value) strategy? Logic. (1) Formalize five statements statements into propositional logic. (2) Convert to CNF. (3) Describe the steps for DPLL on this CNF. Confusion Matrix. Given $n=10,d=2$ $x_i$s and $y_i\\in {+1,-1}$. $w=[1,2]$ is fixed, but $b$ is unknown. List all possible pairs of (Precision, Specificity). (Formula is given.) Decision Tree. Give $n=10$ samples, with attributes: is green or not, tall or short, smelly or not, two or three legs. Classify into Alien or Human. (1) Draw the decision tree of the sample above. (2) Describe the rule to identify Alien (e.g. If (Green = Y and ...) .. Else If (..)) (3) Find a CNF to identify the Alien, which is correct on the dataset. Each clause has exactly two literals. Given $n$ examples $(x_i, y_i)$, where $x_i$ is d-dimension, $y_i \\in {-1,+1}$Gradient Descent with the loss function $L(z) = e^{-z}$, where $z = f(x_i)y_i$. (1) Explain why can $L$ be used for the loss function. (2) Give $\\Delta w$ for a single sample point in stochastic gradient descent. (3) Give $\\Delta w$ for gradient descent. (1) Explain the relationship between the complexity and the bias and variance of a model. (2) For a low-bias and high-variance algorithm, which should be used, boosting or bagging, and why? (3) Briefly describe the similarities and differences between bagging and boosting. (4) Naive Bayes is not a good choice for bagging. Explain the reasons. (5) Random forest, as a variant of bagging, is usually faster than bagging. Explain the reasons.","link":"/2024/09/22/AI-Exam/"},{"title":"About","text":"⭐️Hi! I am Hong Zhaoyang, a third-year undergraduate from the Southern University of Science and Technology (SUSTech) in Shenzhen, China. I am currently conducting research on vector databases (VDB) for large language models (LLMs) in the SUSTech DBGroup under the guidance of Prof. Bo Tang. I plan to apply for a CS PhD program for admission in Fall 2026. I have a keen interest in system design and mechanisms. I also enjoy socializing and collaborating with others. Awards 2022-2023: 47th ICPC (International College Programming Contest) World Finalist (Top 1%) (Qualification Regional) 2023-2024: 9th CCPC (Chinese College Programming Contest) Regional 2-nd runner-up (Scoreboard) 2024: SIGMOD Programming Contest World Finalist (Dashboard) See more repetitive awards here Publications Yangshen Deng, Shiwen Chen, Zhaoyang Hong, Bo Tang.How Does Software Prefetching Work on GPU Query Processing?20th International Workshop on Data Management on New Hardware (DaMoN), affiliated with SIGMOD , Santiago, Chile, June 2024. Experiences Student Assistant of CS209 Introduction to Java Programming, Fall 2023 Student Assistant of CS203 Data Structures and Algorithm Analysis, Fall 2024 (English-speaking, Ongoing) Student Coach of SUSTech-CPC Competition Team, 2022-2023 Problem Setter and Organizer of 2023 SUSTech Programming Competition (Involving 200+ participants from 10+ schools) Instructor of the Voluntary Courses in Olympic in Informatics (OI) for The High school Affiliated to Southern University of Science and Technology (HSAS), 2023 Summer Instructor of X-Camp Summer Camp, 2024 Summer (Hangzhou, China)","link":"/2024/07/11/About/"},{"title":"","text":"","link":"/2024/09/24/CMake%20Tutorial/"},{"title":"CMake Tutorial","text":"12set(CMAKE_CXX_STANDARD 17)set(CMAKE_CXX_STANDARD_REQUIRED True) 在这个例子中，如果编译器不支持 C++ 17，则构建过程将失败 而如果 CMAKE_CXX_STANDARD_REQUIRED 设置为 False，则编译器可以回退到 C++ 14 或更低版本。","link":"/2024/09/24/CMake-Tutorial/"},{"title":"","text":"Day0Jiahao Zhang (章佳豪), huawei GaussDB hangzhou One year gap after PhD huawei 5-star doctor (五星博士) Day1PhD Workshop Before the presentation, I met a PhD student presenter Yuchuan Huang (University of Minnesota - Twin Cities). He spoke Chinese and was kind and friendly. Keynote: How to do research for fun and profit? Divesh Srivastava (AT&amp;T) I asked a question. The main idea is: you mentioned we should follow the goldilocks principle to choose the right problem. For undergraduate students, we have two choices: independently research, easier problem; cooperate with PhD students, less central role. Which one is more beneficial? I recognized Peter Boncz. VLDB@WeChat Wechats contact from: Leader: Tingting Liu (刘婷婷) from Tencent Engineers: Liangyu Chai (柴亮宇), flashlin (nickname?) Chai: “pressure: Sometimes idol, sometimes busy; a pity for ACMer to PhD” Wuhan University, Yuanyuan Zhu (祝圆圆), data management and analysis Phone number: 18602707567 Yan Xiao there (due to family reasons) Shiqi Zhang (张诗奇), Co-advised by Xiaokui Xiao and Bo Tang Xiaokui Xiao a super kindly and young dean! Bin Cui (崔斌), Peking University Ye Yuan (袁野), Beijing Institute of Technology Tao Wang (王涛), Class of 2019, Water Conservancy Engineering PhD (水利工程) Meet: Jeffrey Xu Yu (Chinese University of Hong Kong) Day2I gave my name card to Samuel Madden (MIT) and told him I was seeking for self-funded interns. Demo-A UTOPIA: Automatic Pivot Table Assistant Whanhee Cho (University of Utah); Anna Fariha (University of Utah) Demo-B ImputeVIS: An Interactive Evaluator to Benchmark Imputation Techniques for Time Series Data Mourad Khayati (University of Fribourg); Quentin Nater (University of Fribourg); Jacques Pasquier (Dept. of Informatics; University of Fribourg-CH) Quentin Nater presents DBG-TP: A Large Language Model Assisted Query Performance Regression Debugger Victor Giannakouris (Cornell University); Immanuel Trummer (Cornell University) I gave my name card to Victor and told him I was seeking for self-funded interns. Demo-C DoppelGanger++ in Action: A Database Replay System with Fast Dependency Graph Generation Wonseok Lee (POSTECH); Jaehyun Ha (POSTECH); Wook-Shin Han (POSTECH); Changgyoo Park (Databricks); Myunggon Park (SAP Labs Korea); Juhyeng Han (SAP) A nice korean VQFT: A Visual Query Approach Based on Full-Text Search for Knowledge Graphs ZhaoZhuo Li (Tianjin University); Xin Wang (Tianjin University); Meng Wang (Tongji University); Yajun Yang (Tianjin University); Bohan Li (Nanjing University of Aeronautics and Astronautics); Dong Han (Tianjin academy of fine arts) Add wechat of Zhaozhuo Li (李昭卓), from Tianjin University An Interactive Multi-modal Query Answering System with Retrieval-Augmented Large Language Models Mengzhao Wang (Zhejiang University); Haotian Wu (Zhejiang University); Xiangyu Ke (Zhejiang University, China); Yunjun Gao (Zhejiang University); Xiaoliang Xu (Hangzhou Dianzi University); Lu Chen (Zhejiang University) Haotian Wu, wearing a CCPC Participant T-shirt, from Zhejiang University Mach: Firefighting Time-Critical Issues in Complex Systems Using High-Frequency Telemetry Franco Solleza (Brown University); Shihang Li (University of Washington); William H Sun (Brown University); Richard X Tang (Brown University); Malte Schwarzkopf (Brown University); Nesime Tatbul (Intel Labs and MIT); Andrew Crotty (Northwestern University); David E Cohen (Intel); Stan Zdonik (Brown University) I gave my name card to Franco and told him I was seeking for self-funded interns. Franco recommended me to contact Ugur Cetintemel “in vector databases, very nice professor, recruiting interships” Banquet Loulan, Qin Haoyun Mohammad Javad Amiri AP of Stony Brook University (石溪大学) deep cooperation with UPenn I gave him my card and introduced myself. Huanchen Zhang (张焕晨), Assistant Professor of IIIS (姚班助理教授), CMU PhD (Andy’s student) Day3Cruises DBGroup Renjie Liu (刘仁杰), Amazon Intern Han Zhang (章涵), Another Amazon Intern ACM Honor class UCLA PhD Nice person Peking U, Prof. Lei Zou Linglin Yang (杨凌林) PhD 2021 Lishen Cao (曹力升), PhD Lan Lu’s middle-school classmate? Xinyi Ye (叶心怡), PhD Xiangyang Gou (苟向阳), Postdoctoral Researcher at The University of New South Wales (新南威尔士大学) Zhicheng Ji (季智成), Tsinghua U pmem, cxl share memory 事务引擎 NOI2014 金牌 Grace Fan, from Northeastern University ​","link":"/2024/08/26/VLDB/"},{"title":"Useful Things","text":"Missing cd ~: (tilde) to home; cd -: (dash) to the last directory flag and options: no arguments &amp; with arguments ls -l d: directory rwx: read, write, execute first three: owner second three: permission for the groups that owns the file final three: permission for everyone else special cases if you have permission on write file but not having permission for this directory, you can modify or empty it, but can not delete it. x on directory is the permission for enter the directory (cd) mv a b: move a to b (or, rename) cp a b: copy from a to b rm a: remove ​ -r : recursively ​ rmdir: remove an empty directory mkdir My\\ Photo: create a directory named “My Photo” man xxx: show the manual pages angle brackets &lt; and &gt;：echo hello &gt; hello.txt cat file: print the content cat &lt; file1.txt &gt; file2.txt: copy &gt;&gt; (double end bracket): append instead of overwrite | (pipe character) ls -l | tail -n1 sudo su &amp; exit: enter and exit from root user (# occurred at the front, instead of $) Lecture 2 1234567$ foo=bar$ echo $foobar$ echo &quot;Value is $foo&quot;Value is bar$ echo 'Value is $foo'Value is $foo mkdir -p directory: no error when it already exists source file.sh execute the bash script 12345678910$ cat mybash.sh mcd() { echo &quot;This is script $0&quot; mkdir &quot;script_$1&quot; cd &quot;script_$1&quot;}$ source mybash.sh$ mcd hiThis is scipt -bash# now, in script_hi/ $0 is the name of the script $1,$2 is the first and second arguments $? get the error code of the previous command 1234$ hahaha-bash: hahaha: command not found$ echo $?127 $_ : last argument passed 1234$ echo First Second ThirdFirst Second Third$ echo $_Third !!: bang-bang 12345$ echo f sf s$ !!echo f sf s logical operators 123$ false || echo &quot;Printed&quot;Printed$ true || echo &quot;Not Printed&quot; semicolon A; B echo &quot;We are in $(pwd)&quot; cat &lt;(ls) &lt;(ls ..): - `&lt;(exec)` generates a temporary file containing the output of `exec` test -f file: if file exists. Error code = 1 (not) / 0 (exists) 123456789101112131415161718$ cat mybash.sh echo &quot;Starting at $(date)&quot;echo &quot;Running program $0 with $# arguments with pid $$&quot;for file in &quot;$@&quot;; do grep foobar &quot;$file&quot; &gt; /dev/null 2&gt; /dev/null # redirect stdout and stderr to a null register if [[ &quot;$?&quot; -ne 0 ]]; then echo &quot;File $file does not have any foobar, adding one.&quot; echo &quot;# foobar&quot; &gt;&gt; &quot;$file&quot; # append, not overwrite fidone$ source mybash.sh a.cpp mybash.sh Starting at Mon Jul 29 21:31:58 CST 2024Running program -bash with 2 arguments with pid 67826File a.cpp does not have any foobar, adding one. ls *.{cpp,md} stat -x 1.txt 12345678 File: &quot;1.txt&quot; Size: 0 FileType: Regular File Mode: (0644/-rw-r--r--) Uid: ( 501/hongzhaoyang) Gid: ( 20/ staff)Device: 1,13 Inode: 91791818 Links: 1Access: Tue Jul 30 20:23:47 2024Modify: Tue Jul 30 20:23:47 2024Change: Tue Jul 30 20:23:47 2024 Birth: Tue Jul 30 20:21:55 2024 touch 1.txt : modify timestamp (or, create) Interval 12345678$ mkdir foo bar$ touch {foo,bar}/{a..e}$ cd foo/$ lsa b c d e$ cd ../bar/$ lsa b c d e Let the shell know how to execute sth, add the path to the execute For example, in python: 1234#!/usr/local/bin pythonimport sysfor arg in reversed(sys.argv[1:]): print(arg) use chmod +x a.py to give permission for executing a.py. Then you can ./a.py Note: This does not work on MacOS (chmod is invalid on MacOS, but chmod +x a.sh is allowed). shellcheck a.sh: check your shell code (need to install shellcheck) Note: ./a.sh and source a.sh is different. The former one is executing in an isolated environment (no side effect, e.g. cd into some subdirectories). tldr convert: offer simple and brief examples of usage, when man is too long and obscure for you. find . -name src -type d find . -path '**/test/*.py' -type f find . -mtime 1 - 1 exact one day from last modification - -1 within the past one day - +1 before one day ago find . -name &quot;*.tmp&quot; -exec rm {} \\; locate XXX grep -R something . rg &quot;something&quot; -t py &lt;path&gt; should install ripgrep -C x: add context, print line $[a-x,a+x]$ rg -u --file-without-match &quot;^#\\!&quot; -t sh -u: --unrestricted. Reduce the level of “smart” searching. A single -u won’t respect .gitignore (etc.) files. Two -u flags will additionally search hidden files and directories. Three -u flags will additionally search binary files. ^#\\!: file start with #! history x: last x commands tree: (need to install tree) see the structure of the current directory | less: a pager to scroll ANSI 转义序列 echo -e &quot;\\033[1mThis is bold text\\033[0m&quot; ./exec | tee exec.log tmux, then ./exec After an unexpected Network Error: tmux attach tmux kill-session top see all processes lsblk find . -executable -name &quot;prefix*&quot; Storage Primary storage The modern primary storage is semiconductor memory RAM (Random Access Memory). small-sized, expensive volatile, lose information when not powered access time is measured in nanoseconds $10^{-9}s$ ? how to measure? two types: static random access memory (SRAM) and dynamic random access memory (DRAM) Main memory is connected to the CPU via a memory bus (an address bus and a data bus). Additionally, a memory management unit (MMU ❓) is a small device between CPU and RAM recalculating the actual memory address, for example to provide an abstraction of virtual memory or other tasks. Non-volatile primary storage containing a small startup program (BIOS ❓) is used to bootstrap the computer, that is, to read a larger program from non-volatile secondary storage to RAM and start to execute it. A non-volatile technology used for this purpose is called ROM (Read-Only Memory) not literally read only, as updates are possible Secondary storage In modern computers, hard disk drives (HDDs) or solid-state drives (SSDs) are usually used as secondary storage. ![image-20240719164703210](/Users/hongzhaoyang/Library/Application Support/typora-user-images/image-20240719164703210.png) ![image-20240719164715753](/Users/hongzhaoyang/Library/Application Support/typora-user-images/image-20240719164715753.png)","link":"/2024/07/18/Useful-Things/"},{"title":"Writing in Aug 3rd, 2024","text":"Benefits of Teaching the Competitive Programming Summer Camp at Xinyou (X-Camp) During the summer vacation of 2024, I signed a contract with Xinyou (known as X-Camp in the US), a competitive programming educational company, to teach an advanced high school class, which is the second most challenging level out of the seven offered. My qualifications for this role included a silver medal in the National Olympiad in Informatics (NOI) in 2021 and qualification for the 47th International Collegiate Programming Contest (ICPC) World Finals. When my friend Mang introduced me to this opportunity, it was difficult to refuse. The salary was sufficient to cover my expenses for the next two years, and the job required only four hours of work per day. Thus, I accepted the offer without much hesitation. However, the job did not turn out to be as fulfilling as I had hoped. Balancing this part-time job with my research responsibilities at school proved challenging. I often felt overwhelmed by anxiety and depression. A few weeks later, I realized that I needed to take responsibility for my decision. I also acknowledged that my constant worry about failure and criticism was counterproductive. Consequently, I adjusted my mindset to be more determined, resilient to stress, and less concerned about others’ opinions. Despite these challenges, there were several benefits. Financially, I earned a significant amount, which made my life over the next two years more comfortable and less stressful. Additionally, I experienced several personal growth opportunities: Public Speaking: I gained confidence in sharing my knowledge and opinions in front of a group, which was previously a challenge for me. I now feel much more comfortable with public speaking. Managing Anxiety: I reduced my anxiety about not being fully prepared or completing tasks. I had previously spent excessive time ensuring everything was done correctly, which affected my efficiency and revealed my fragile mindset. Through experiences of not performing perfectly, I learned to focus on maximizing efficiency and managing anxiety. Communication Skills: I interacted with students of varying personalities, including those who tend to lose patience. These interactions provided valuable experience and exposed me to diverse situations, making me more adaptable and calm in unexpected communication scenarios. Insight into Company Operations: I gained an understanding of how a company operates, particularly from a human resources perspective. Learning how to effectively communicate with students, parents, administrators, and third-party service providers was an important and valuable experience. Overall, it has been a little painful but surprisingly beneficial month. I hope that in the next stage, I can focus on my research topics as well as continue to further my socialization.","link":"/2024/08/03/Writing-in-Aug-3rd-2024/"}],"tags":[],"categories":[],"pages":[{"title":"","text":"SUSTech-Vichy (with Li Haoyu, Chen Luyao) 2022 ICPC Asia Xi’an Regional Contest Gold (qualified for World Final) 2022 ICPC Asia Nanjing Regional Contest Gold 2022 CCPC Guilin Regional Contest Gold SUSTech-Helsinki (with Feng Zhaohang, He Yujun) 2023 ICPC Asia Xi’an Regional Contest Gold 2023 ICPC Asia Hangzhou Regional Contest Gold 2023 CCPC Harbin Regional Contest Gold 2023 CCPC Guilin Regional Contest Gold (2nd runner-up) 2023 ICPC Asia-East Continent Final Contest Silver Personal 2022 SUSTech Programming Contest First Prize 2022 Shenzhen Technology University Programming Contest First Prize 2022 Shenzhen University Programming Contest Second Place","link":"/competitions/index.html"},{"title":"Gallery","text":"I engaged in the proposition and led the organization of the 2023 SUSTech Programming Contest (involving over 200 participants). I provided Olympic in Informatics (OI) courses for the High school Affiliated to Southern University of Science and Technology. I performed as a classical guitarist in our band at the campus Starry Sky Concert, playing Hotel California. Do you like this classic English song? SUSTech-Vichy team attended ICPC World Finals 2023 in Luxor, Egypt. SUSTech-Helsinki team won the first regional trophy 🏆 for SUSTech. A photo with Mike Mirzayanov, the founder of Codeforces. VLDB2024 (Guangzhou)","link":"/gallery/index.html"},{"title":"Tutorials","text":"2024 Fall Data Structures and Algorithms Analysis TutorialsLab3 Problem D Converted Vinux input In this problem, you need to implement a one-line editor. The idea of using the bidirectional linked list is straightforward. 1234class Node { public char ch; public Node left, right;}; Hint: EOF is represented by -1. You can preserve this convention. Also, maintain some additional pointers, pointing to the head node, tail node (EOF), and current node. 1Node hd, tl, current; r: next single input would replace the current character; You could immediately read the next character and replace the character of the current node with the new one. Please note that the EOL will revive immediately at the end of the line whenever it vanishes! So if the current node is EOF, you should first create a new EOF, adjacent to the right of the current node, before (or, after) replacing the current character. Don’t forget to update bk. I: move the character pointer to the head of the line; 1current = hd; H: left shift the current character pointer unless it is at the leftmost place; 123if (current != hd) { current = current.left;} L: right shift the current character pointer unless it is at the rightmost place; Similar to H. x: delete the current character; If the current character is not EOF, simply remove it from the linked list. 1234Node L = current.left;Node R = current.right;L.right = R;R.left = L; If the current character is EOF, just do nothing. Lab3 E From-now-on minimum difference Monotonic Stack. Task: Given a sequence $a_1,…,a_n$. Find $r_i = \\min_{j&gt;i,a_j&gt;a_i} j$ for every $i$ in $\\mathcal O(n)$. Lab3 F Peggy hates decreasing There will be multiple rounds of deletion. If we can precisely identify the elements to delete in each round, the total complexity will be $\\mathcal{O}(n)$, as each element is examined (or deleted) at most once. To facilitate fast deletion, we construct a linked list. Initially, the elements $a_1, a_2, \\dots, a_n$ are linked together. In the first round, a for-loop is used to find the elements that need to be erased. 12345for (int i = 1; i &lt;= n; i ++) { if (a[i] is decreasing) { Q1.push(node[i]); }} Starting from the second round, the deletion queue can be derived from the previous round’s queue, based on the following observation: If an element is not “decreasing” initially and neither of its neighbors has been deleted now, it remains “non-decreasing”. Now, suppose we are deleting elements $x$ (in the linked list) one by one from the queue $Q_x$. After removing $x$, we add its neighbors x.left and x.right to a “candidate list” for $Q_{x+1}$. Once the current round of deletions is complete, we check each element to determine if it should be added in $Q_{x+1}$. This process continues until $Q_x$ is empty.","link":"/tutorials/index.html"}]}